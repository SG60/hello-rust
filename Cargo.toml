[package]
name = "hello-rust-backend"
version = "0.3.0"
edition = "2021"
license = "AGPL-3.0-or-later"
default-run = "hello-rust-backend"

[workspace]
members = ["packages/*"]

[workspace.package]
edition = "2021"
license = "AGPL-3.0-or-later"
authors = ["Sam Greening"]
homepage = "https://github.com/SG60/EventSpider"
repository = "https://github.com/SG60/EventSpider"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
# Defines a feature to enable the tokio console tracing integration
tokio-console = ["dep:console-subscriber"]

[dependencies]
reqwest = { version = "0.11", default-features = false, features = ["json", "rustls-tls"] }
tokio = { version = "1", features = ["rt-multi-thread", "time", "signal"] }
tokio-stream = "0.1.15"
tokio-util = "0.7.10"
serde = { version = "1.0.200", features = ["derive"] }
serde_json = "1.0.116"
serde_dynamo = { version = "4.2.14", features = ["aws-sdk-dynamodb+0_21"] }
aws-config = "0.51.0"
aws-sdk-dynamodb = "0.21.0"
# https://github.com/1Password/typeshare
# sharing types with frontend
typeshare = "1.0.1"

# config merging
figment = { version = "0.10.18", features = ["toml", "env"] }

# error types
thiserror = "1.0.58"
anyhow = "1.0.82"

# tokio tracing crate
tracing = "0.1.40"
# Implements the types defined in the Otel spec
# "rt-tokio-current-thread" required for batch exports of spans
opentelemetry = { version = "0.28.0", features = ["rt-tokio-current-thread"] }
opentelemetry-semantic-conventions = "0.28.0"
# Integration between the tracing crate and the opentelemetry crate
tracing-opentelemetry = "0.18.0"
# Allows you to export data to OTEL collector
# Requires protoc to be installed (protobuf compiler)
opentelemetry-otlp = "0.28.0"
tracing-subscriber = { version = "0.3.18", features = ["json", "env-filter"] }
tracing-serde = "0.1.3"
# tokion console async debugger
console-subscriber = { version = "0.1.10", optional = true }

opentelemetry-tracing-utils = { path = "packages/opentelemetry-tracing-utils" }

# GRPC (used for connecting to etcd)
tonic = "0.8.3"
prost = "0.11.9"
once_cell = "1.18.0"

[build-dependencies]
# compile .proto files into an api
tonic-build = "0.8.4"

# Cross (cross-compilation) Config
[package.metadata.cross.target.aarch64-unknown-linux-gnu]
# install protoc protobuf compiler in cross docker image
image = "cross-docker-image:tag"
# dockerfile = "./CrossDockerfile"

[profile.release]
# lto = true
# https://doc.rust-lang.org/cargo/reference/profiles.html#strip
strip = true
